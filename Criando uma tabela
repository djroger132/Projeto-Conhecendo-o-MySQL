Criar tabelas
Agora, a nossa próxima etapa é criar as tabelas que estarão contidas nesse banco de dados. Vamos fechar, na parte central, as abas de query que usamos para criar o banco de dados. Vamos começar criando a nossa primeira tabela, que será a tabela de proprietários. A Insight Places já disponibilizou para nós o código SQL de criação de seis tabelas, que são as tabelas que ela já utiliza no banco de dados dela, e ela quer que nós tragamos essas tabelas para cá.

Vamos começar criando a tabela de proprietários.

Uma informação importante é que, quando formos fazer qualquer função no MySQL, seja comando ou criar uma tabela, precisamos identificar em qual banco de dados queremos que essa ação aconteça.

Temos duas formas de fazer isso. Ou podemos vir na lateral esquerda e clicar duas vezes em cima do nome do banco de dados, e ele ficará em negrito, indicando que estamos usando esse banco de dados A partir de agora, tudo que colocarmos de código, queremos que se aplique nesse banco.

Ou podemos vir no centro, onde escrevemos nossas consultas, e colocar o comando USE e o nome do banco de dados que vamos utilizar. Nesse caso, é o insight_places. insight_places. Colocamos ponto e vírgula, descemos uma linha e já podemos começar a criar nossa tabela.

USE insight_places
COPIAR CÓDIGO
Agora o MySQL entende que estamos usando o banco da Insight Places para adicionar essas informações.

Vamos começar com a criação da nossa primeira tabela.

Colocaremos o comando CREATE TABLE. O nome da nossa tabela será proprietarios.

Importante: é uma boa prática sempre manter o que é comando da linguagem SQL em letra maiúscula e o que é nome de tabela, de coluna, de banco de dados, colocamos em letra minúscula. Isso ajuda a leitura e a nos localizarmos quando temos códigos mais longos.

Então, colocamos CREATE TABLE proprietarios.

CREATE TABLE proprietarios
COPIAR CÓDIGO
Vamos abrir um parênteses para conseguirmos especificar quais colunas essa tabela terá.

A primeira coluna dessa tabela será a coluna de proprietario_id, que será do tipo VARCHAR, ou seja, um tipo texto. Entre parênteses, colocamos o limite de caracteres que pode ter em cada registro, em cada linha dessa coluna. Vamos colocar 255. É só um estimado, não quer dizer que todos os dados terão esse tanto, mas colocamos um valor estimado.

Mais para frente, falaremos um pouco sobre cada tipo de dado, como funciona, como podemos utilizar, qual é a coluna ideal para aplicar a cada tipo de dado. Vamos explorar um pouco isso melhor mais para frente. Mas, primeiro, vamos focar mesmo na estrutura das tabelas.

Essa coluna de proprietario_id será uma chave primária. Então, vamos colocar aqui PRIMARY KEY. E aí, vamos colocar a vírgula para irmos para a próxima coluna.

USE insight_places;
CREATE TABLE proprietarios (
proprietarios_id VARCHAR (255) PRIMARY KEY,

)
COPIAR CÓDIGO
A próxima coluna será a coluna de nome. Também será do tipo VARCHAR. E, entre parênteses, podemos colocar um limite de 255 também. Vamos colocar a vírgula e ir para a próxima coluna, que é a coluna de cpf_cnpj. Essa coluna também será do tipo VARCHAR. E o limite dela será 20, porque o número de CPF e CNPJ já é um valor mais fácil de determinarmos quantos dígitos terão.

A próxima coluna será a de contato. E aí, colocamos que o tipo dela será de VARCHAR também. Entre parênteses, vamos colocar aqui 255.

USE insight_places;
CREATE TABLE proprietarios (
proprietarios_id VARCHAR (255) PRIMARY KEY,
nome VARCHAR (255),
cpf_cnpj VARCHAR (20),
contato VARCHAR (255)
)
COPIAR CÓDIGO
Podemos executar esse comando.

O nosso comando foi rodado com sucesso. Se formos na nossa lateral esquerda, ao lado de Schemas, e clicarmos na setinha para atualizar, ali dentro do banco de dados da insight_places, já terá, no nome de tabelas, a tabela proprietarios. Se clicarmos na setinha ao lado do nome de proprietarios, temos ali as informações da tabela, e ao lado de Columns, que são as colunas, temos acesso ao nome de todas as colunas que tem nessa tabela.

É útil para podermos ver as informações do nosso banco de dados sem ter que criar uma consulta, ter um acesso rápido.

Desafio
Mas essa é só uma das tabelas do banco de dados da Insight Place. Como falamos no começo do vídeo, a Insight Place tem seis tabelas no banco de dados que ela pretende manter nessa estrutura.

Nós vamos deixar para você criar essas outras cinco tabelas. Após esse vídeo, vamos deixar uma atividade onde terá o código script de criação dessas tabelas e você terá que criar no seu MySQL Workbench essas outras cinco tabelas.

Então, é super importante que, antes de ir para o vídeo da próxima aula, você crie essas tabelas, porque no próximo vídeo já vamos popular essas tabelas com dados, e se você não tiver criado todas as seis tabelas, você não conseguirá acompanhar.

USE insight_places;

CREATE TABLE proprietarios (
proprietario_id VARCHAR(255) PRIMARY KEY,
nome VARCHAR(255),
cpf_cnpj VARCHAR(20),
contato VARCHAR(255)
);

CREATE TABLE clientes (
    cliente_id VARCHAR(255) PRIMARY KEY,
    nome VARCHAR(255),
    cpf VARCHAR(14),
    contato VARCHAR(255)
);

CREATE TABLE enderecos (
    endereco_id VARCHAR(255) PRIMARY KEY,
    rua VARCHAR(255),
    numero INT,
    bairro VARCHAR(255),
    cidade VARCHAR(255),
    estado VARCHAR(2),
    cep VARCHAR(10)
);

CREATE TABLE hospedagens (
    hospedagem_id VARCHAR(255) PRIMARY KEY,
    tipo VARCHAR(50),
    endereco_id VARCHAR(255),
    proprietario_id VARCHAR(255),
        ativo bool,
    FOREIGN KEY (endereco_id) REFERENCES enderecos(endereco_id),
    FOREIGN KEY (proprietario_id) REFERENCES proprietarios(proprietario_id)
);

CREATE TABLE alugueis (
    aluguel_id VARCHAR(255) PRIMARY KEY,
    cliente_id VARCHAR(255),
    hospedagem_id VARCHAR(255),
    data_inicio DATE,
    data_fim DATE,
    preco_total DECIMAL(10, 2),
    FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id),
    FOREIGN KEY (hospedagem_id) REFERENCES hospedagens(hospedagem_id)
);

CREATE TABLE avaliacoes (
avaliacao_id VARCHAR(255) PRIMARY KEY,
cliente_id VARCHAR(255),
hospedagem_id VARCHAR(255),
nota INT,
comentario TEXT,
FOREIGN KEY (cliente_id) REFERENCES clientes(cliente_id),
FOREIGN KEY (hospedagem_id) REFERENCES hospedagens(hospedagem_id)
);
